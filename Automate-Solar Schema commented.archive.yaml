definitions:
  #impinging flux: amount of a specific material from the PVD source that impinges on the substrate per unit time
  #normalise function can do e.g. applying QCM model to calc fluxes form sources
  
  name: Automate-Solar Schema
  sections:
    Position: #reusable for all objects that have a position in the sputtering (or other) process
      description: In BERTHA's coordinate system, x is the axis via which the substrate is loaded (increasing in the same direction), and z is vertical. x = y = z = 0 is the centre of the substrate holder upon loading in the chamber 
      quantities:
        center_xyz:
          type: float
          unit: meter
          shape: [*]
          description: 
        center_normal:
          type: float
          shape: [*]
          description: (unit) vector describing the direction of the source
        rotation:
          type: float
          description: angle of rotation of object around its centre_normal

    TimeSeriesData: #reusable for all time series data
      quantities:
        times:
          type: float
          shape: [*]
        values:
          type: float
          shape: [*]
        mean:
          type: float
        standard_deviation:
          type: float
        slope:
          type: float
          
    Sensor:
      description: a general sensor that is placed in the PVD chamber
      sections:
        position: 
          section: "#/Position" 
        sensor_data:
          section: "#/TimeSeriesData"
                            
    QCMSensor: 
      description: a qcm sensor as a specific type of Sensor
      base_section: "#/Sensor"
      sub_sections: #does this work, to just add a new unit to the section defined for Sensor?
        crystal_info:
          section:
            quantities:
              type:
                type: string # e.g. quartz 6MHz gold contacts, part number etc
              resonant_frequency:
                type: float
                unit: /second
        sensor_data:
          sections:
            quantities:
              values:
                unit: /second #adding the relevant unit for this time series
                #NOTE: need to add units to the mean, stdev and slope...
        derived_quantities:
          sections:
            lifetime:
              section: "#/TimeSeriesData"
                quantities:
                  values:
                    unit: percent #adding the relevant unit for this time series
            total_impinging_flux: #we may or may not produce time-series data for the calculated impinging flux on the sensor. We may alternatively calculate it for the step as a whole. but this is still a relevant quantity in principle
              section: "#/TimeSeriesData"
                quantities:
                  values:
                    unit: gram / meter**2
            
    ChamberEnvironment:
      base_sections:
        - nomad_material_processing.physical_vapor_deposition.ChamberEnvironment #includes gas type and flow, pressure
      sub_sections:
        sensors:
          section: "#/QCMSensor"
            #how/where to add several QCM sensors?
        setpoints: #is this the appropriate place to add these? i.e. the experimental settings for the values that are subsequently measured?
          section:
            quantities:
              pressure:
                type: float
                unit: pascal
              flow:
                type: float
                unit: meter**3 / second
                
    SputterTarget:
      sub_sections:
        material:
          section: nomad.datamodel.metainfo.basesections.PureSubstanceSection
          sub_sections:
            purity:
              type: float
              unit: percent
            contaminants:
              type: string
              shape: [*]
            concentrations:
              type: int
              shape: [*]
              unit: ppm
      quantities:
        area:
          type: float
          unit: meter**2
        thickness:
          type: int
          unit: meter
        backing_plate:
          type: string #e.g. copper, 2mm, none
        manufacturer:
          type: string        

    Magnetron: #The thing that is driving the vapour flux. 
      base_sections:
        - nomad_material_processing.physical_vapor_deposition.EvaporationSource
      sub_sections:
        setpoints: #settings that are supplied to/requested from the source
          section:
            quantities:
              set_power: 
                type: float
                unit: watt
              set_voltage:
                type: float
                unit: volt
              set_current:
                type: float
                unit: ampere 
        #below are the measured/actual values provided by the source
        #power is already included in EvaporationSource but is extended here
        power:
          section: "#/TimeSeriesData"
            quantities:
              values:
                unit: watt
        voltage:
          section: "#/TimeSeriesData"
            quantities:
              values:
                unit: volt
        current:
          section: "#/TimeSeriesData"
            quantities:
              values:
                unit: ampere
        
        #questionable whether magnetrons need positions? position of what exactly?
        #position: 
        #  section: "#/Position" #syntax for reusing a section in the current schema
        
        power_supply:
          section:
            quantities:
              instrument_id:
                type: str
                description: identifier for a specific instrument 
              supply_type:
                type: str
                description: e.g. RF or pulsed DC 
              frequency:
                type: int
                unit: /second
                description: pulse frequence of source 

    SputterFlux:  #the manifestation of sputtering flux
        base_sections:
          - nomad_material_processing.physical_vapor_deposition.PVDSource
        sub_sections:
          vapor_source: #overwriting the existing one
            base_section: "#/Magnetron"
          flux_origin: 
            section: "#/Position" #position where the flux originates from (target centre position in this case)
          material: #overwriting
            section:
              base_sections:
                - nomad.datamodel.metainfo.basesections.CompositeSystemReference
              quantities:
                reference: 
                  type: "#/SputterTarget"
    
    AutomateSolarSputterDeposition:
      base_sections:
      - nomad_material_processing.physical_vapor_deposition.SputterDeposition
      - nomad.datamodel.data.EntryData

      sub_sections:
        preparation:
          sections:
            base_pressure:
              sections:
                quantities:
                  base_pressure:
                    type: float
                    unit: pascal
                    description: the base pressure of the vacuum chamber prior to initating an experiment
            presputtering:
              sections:
                quantities:
                  presputter time:
                    type: int
                    shape: [*] #for each magnetron
                    unit: second
                  power_setpoints:
                    type: int
                    shape: [*] #for each magnetron
                    unit: watt
                  end_voltages:
                    type: int
                    shape: [*] #for each magnetron
                    unit: volt
        steps:
          sections: 
            base_sections:
            - nomad_material_processing.physical_vapor_deposition.VaporDepositionStep
            sub_sections:
              sources: #overwriting existing one
                section: "#/Magnetron"
              environment:
                section: "#/ChamberEnvironment"
          repeats: true    
            

          

    #Substrates
    #Instrument


            
        

    